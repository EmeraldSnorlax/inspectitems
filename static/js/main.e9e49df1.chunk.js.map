{"version":3,"sources":["components/Header.tsx","components/Item.tsx","components/Footer.tsx","App.tsx","hooks/useItems.ts","serviceWorker.ts","index.tsx"],"names":["Container","Brand","Nav","Button","NavLink","SteamIcon","xmlns","viewBox","d","Header","href","className","target","Wrapper","Image","Price","SuggestedPrice","Title","Name","Text","Detail","Tradable","Lock","Inspect","Divider","ItemDetail","props","name","value","Item","lock","getDateDiff","src","classid","convertCurrency","price","suggestedPrice","css","color","title","text","itemid","wear","pattern","inspect","salePrice","String","split","whole","length","substring","join","date","Date","toLocaleDateString","Content","Footer","getFullYear","process","Heading","ItemsContainer","ItemBox","CSGOIcon","fill-rule","App","items","useState","data","map","item","inspectLink","itemId","assetId","useItems","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e9e49df1.chunk.js","sourcesContent":["import React from 'react'\nimport tw from 'twin.macro'\n\nconst Container = tw.header`max-w-full w-full h-16 bg-gray-900 flex items-center px-4`\nconst Brand = tw.a`text-2xl text-gray-100 font-bold uppercase font-sans tracking-widest`\nconst Nav = tw.nav`mr-auto ml-6`\nconst Button = tw.a`appearance-none uppercase text-sm px-8 py-2 text-gray-100 focus:outline-none  rounded-md font-medium tracking-widest flex items-center bg-gradient-to-r from-indigo-500 to-purple-500`\nconst NavLink = tw(Brand)`text-sm hover:text-indigo-500 pr-4`\n\nexport const SteamIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    tw=\"w-6 h-6 fill-current text-gray-100  md:mr-2\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M17.5 11.001c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3zm0-5c-1.103 0-2 .897-2 2s.897 2 2 2 2-.897 2-2-.897-2-2-2zM7.498 20.003c-.446 0-.89-.101-1.304-.3a.499.499 0 11.436-.9 1.983 1.983 0 001.528.088 1.99 1.99 0 001.143-1.018 2.002 2.002 0 00-.931-2.671.5.5 0 11.436-.9 3.004 3.004 0 011.396 4.006 2.98 2.98 0 01-1.714 1.528 3.053 3.053 0 01-.99.167z\" />\n    <path d=\"M7.5 22.001c-2.119 0-4.019-1.375-4.709-3.376l-1.949-.65a.498.498 0 01-.342-.474v-6a.499.499 0 01.707-.455l3.702 1.683c.957-.583 2.019-.848 3.227-.683L11.5 7.933a6.008 6.008 0 016-5.932c3.309 0 6 2.691 6 6a6 6 0 01-5.501 5.973l-5.612 4.008A4.962 4.962 0 017.5 22.001zm-6-4.86l1.85.617a.499.499 0 01.322.337c.489 1.711 2.063 2.907 3.828 2.907a3.97 3.97 0 003.936-3.384.502.502 0 01.203-.33l5.894-4.209a.497.497 0 01.262-.092 5 5 0 004.706-4.985c0-2.757-2.243-5-5-5s-5 2.243-5 5c0 .115-.035.332-.108.421l-3.665 4.48a.494.494 0 01-.479.175 4.026 4.026 0 00-.747-.076c-.811 0-1.594.245-2.265.708a.496.496 0 01-.491.043L1.5 12.278v4.863z\" />\n  </svg>\n)\n\nexport const Header: React.FC = () => {\n  return (\n    <Container>\n      <Brand href=\"/\">\n        <span tw=\"text-indigo-500\">inspect</span>game\n      </Brand>\n      <Nav>\n        <NavLink href=\"/\" tw=\"text-indigo-500\">\n          market\n        </NavLink>\n        <NavLink className=\"goAuth\" href=\"/\">\n          inventory check\n        </NavLink>\n        <NavLink href=\"/\" className=\"goAuth\">\n          inspect skins\n        </NavLink>\n      </Nav>\n      <Button\n        target=\"_self\"\n        href=\"/\"\n        className=\"goAuth\"\n        tw=\"bg-gradient-to-r from-indigo-500 to-purple-500\"\n      >\n        <SteamIcon />\n        sign in with steam\n      </Button>\n    </Container>\n  )\n}\n","import React from 'react'\nimport tw, { css } from 'twin.macro'\n\nconst Wrapper = tw.div`w-full h-full bg-gray-900 p-6 relative mb-12`\n\nconst Image = tw.img`w-full lg:w-9/12 object-cover object-center mx-auto`\nconst Price = tw.p`text-2xl font-bold text-gray-100`\nconst SuggestedPrice = tw.p`text-sm text-gray-600 pb-4`\nconst Title = tw.p`text-sm`\nconst Name = tw.p`text-lg text-gray-100`\nconst Text = tw(SuggestedPrice)`text-gray-600`\nconst Detail = tw.p`text-gray-200 uppercase`\nconst Tradable = tw.p`text-green-700 text-xs`\nconst Lock = tw.p`text-yellow-700 text-xs`\nconst Inspect = tw.a`text-indigo-600 uppercase text-xs hover:underline`\nconst Button = tw.a`appearance-none uppercase text-sm px-8 py-3 text-gray-100 focus:outline-none font-medium tracking-widest flex items-center bg-gradient-to-r from-indigo-500 to-purple-500 absolute bottom-0 inset-x-0 block text-center`\nconst Divider = tw.div`my-4 h-px w-full bg-gray-800`\n\ntype ItemProps = {\n  lock: string | null\n  classid: string\n  price: number\n  suggestedPrice: number\n  title: string\n  wear: number\n  text: string\n  name: string\n  color: string\n  inspect: string\n  itemid: number\n  pattern: number\n}\n\ntype ItemDetailProps = {\n  name: string\n  value: number\n}\n\nconst ItemDetail: React.FC<ItemDetailProps> = (props) => (\n  <>\n    <Text tw=\"text-xs uppercase pb-0\">{props.name}</Text>\n    <Detail tw=\"pb-1\">{props.value}</Detail>\n  </>\n)\n\nexport const Item: React.FC<ItemProps> = (props) => (\n  <Wrapper>\n    {!props.lock ? (\n      <Tradable>Tradable</Tradable>\n    ) : (\n      <Lock>Tradable at {getDateDiff(props.lock)}</Lock>\n    )}\n    <Image\n      src={`https://steamcommunity-a.akamaihd.net/economy/image/class/730/${props.classid}/256x128`}\n    />\n    <Price>$ {convertCurrency(props.price)}</Price>\n    <SuggestedPrice>\n      Suggested Price ${convertCurrency(props.suggestedPrice)}\n    </SuggestedPrice>\n    <Title\n      css={[\n        css`\n          color: ${props.color};\n        `,\n      ]}\n    >\n      {props.title}\n    </Title>\n    <Name>{props.name}</Name>\n    <Text>{props.text}</Text>\n    <Divider />\n    <ItemDetail name=\"itemid\" value={props.itemid} />\n    <ItemDetail name=\"float\" value={props.wear} />\n    <ItemDetail name=\"pattern index\" value={props.pattern} />\n    <Inspect target=\"_blank\" href={props.inspect}>\n      Inspect item\n    </Inspect>\n    <Button className=\"goAuth\" href=\"/\">\n      add to cart\n    </Button>\n  </Wrapper>\n)\n\nconst convertCurrency = (salePrice: number) => {\n  const price = String(salePrice * 1.18745).split('.')[0]\n  const whole = price.length - 2\n  return [price.substring(0, whole), price.substring(whole, price.length)].join(\n    '.'\n  )\n}\n\nconst getDateDiff = (date: string) => {\n  const tradable = new Date(date)\n  return tradable.toLocaleDateString()\n}\n","import React from 'react'\nimport tw from 'twin.macro'\n\nconst Wrapper = tw.footer`max-w-full w-full bg-gray-700 flex items-center px-4 py-6`\nconst Content = tw.div`flex flex-wrap overflow-hidden max-w-screen-xl mx-auto w-full`\nconst Text = tw.p`text-gray-500 text-sm uppercase`\nexport function Footer() {\n  return (\n    <Wrapper>\n      <Content>\n        <Text>\n          &copy; 2015 &mdash; {new Date().getFullYear()}{' '}\n          {process.env.REACT_APP_SITENAME}\n        </Text>\n        <Text tw=\"ml-auto\">\n          Powered by Steam. Not affiliated with Valve Corp.\n        </Text>\n      </Content>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport tw from 'twin.macro'\n\nimport { Header } from 'components/Header'\nimport { useItems } from 'hooks/useItems'\nimport { Item } from 'components/Item'\nimport { Footer } from 'components/Footer'\n\nconst Container = tw.main`w-full min-h-screen bg-gray-800 font-sans`\nconst Heading = tw.h1`text-2xl text-gray-100 flex items-center font-bold uppercase`\nconst Content = tw.div`max-w-screen-xl flex mx-auto mt-8 flex-col`\nconst ItemsContainer = tw.div`flex flex-wrap -mx-1 overflow-hidden mt-4 mb-20`\nconst ItemBox = tw.div`my-1 px-1 w-1/5 overflow-hidden md:w-1/2 lg:w-1/3 xl:w-1/5`\n\nfunction App() {\n  const { items } = useItems()\n  return (\n    <Container>\n      <Header />\n      <Content>\n        <Heading>\n          <CSGOIcon />\n          Popular in CS:GO\n        </Heading>\n        <ItemsContainer>\n          {items.map((item) => (\n            <ItemBox>\n              <Item {...item} />\n            </ItemBox>\n          ))}\n        </ItemsContainer>\n      </Content>\n      <Footer />\n    </Container>\n  )\n}\n\nconst CSGOIcon = () => (\n  <svg viewBox=\"0 0 113 148\" tw=\"fill-current w-8 h-8\">\n    <path\n      d=\"M80.954 25.26a2.976 2.976 0 01-.835.294c-1.594 2.29-.633 2.02-3.444 3.933.006 3.836.114 4.248 1.002 7.646a.302.302 0 01-.035.233.285.285 0 01-.187.135c-.68.147-1.658.403-2.223.51.018.12.288 2.294-.016 3.91-.477 2.54-6.433 8.096-7.853 8.38-1.969.394-4.168-1.37-7.605-2.9-.948-.423-4.127-2.544-5.791-3.107-1.381-.466-2.767 2.943-1.051 3.859.799.426 2.072.998 2.474 2.057 1.193 3.136-.187 15.231-2.646 17.664-1.165-.009-2.147-1.096-3.012-.811-1.548.858-.569 5.657 0 6.49 9.515 9.934 8.385 17.29 12.425 22.783 1.842 0 .633 1.98 2.03 4.307.373 1.196-.107 3.225-.307 3.995v2.996l-.308.938v2.62c-.283 1.278-.594 2.99-.86 4.182-.564 2.516 1.617 4.471.307 6.866 0 1.472.004 1.18-.862 2.373 0 2.285-.53 7.1 0 8.8.37 1.183 4.598 6.2 5.66 6.68 2.557 1.155 6.327.906 5.105 4.993-7.486 2.331-12.266-1.314-16.253-1.373l-.188.695a16.682 16.682 0 01-5.15-.82c-.005-.7.825-6.07 1.106-6.929l.862-1.373c.31-.914-.315-7.62-.369-9.424-1.595-1.19-1.907-4.814-1.907-6.804-.46-1.541-.46-3.369-.553-5.369-.045-.94-.595-2.319-.246-3.495.237-.804 1.131-1.156 1.353-1.811v-2.246c.42-2.365.29-3.454-1.107-4.868-3.5.045-3.982.217-5.905-2.81-.599-.94-5.494-8.78-5.968-8.989-4.074-1.802-3.262-1.101-5.045-4.305-.072 0-1.157.366-2.116 1.822-1.456 2.21-4.038 9.392-4.774 11.91-.41 1.404.003 2.956-.614 4.119-.447.841-1.901 1.111-2.214 1.685-1.428 2.61-.36 2.405-3.077 4.244-.489.64-.503 1.601-.86 2.372l-.615.874c-.458.997.486 2.812.307 3.433-.47 1.635-1.092 3.285-1.723 4.807-1.245 3-1.083 6.984-2.34 8.828-.63.927-2.156.022-3.319.784-.067.645-1.913 4.927-2.276 6.117v6.803c.347 1.148 1.3 2.238 1.016 3.69-.3 1.546-5.6 1.522-8.474 1.101-1.925-.281-2.503-1.72-2.472-3.385.039-1.964 3.954-14.729 3.717-15.575-2.973-3.393.795-6.885 1.907-10.049.542-1.542.21-3.695.8-5.118 1.046-1.935 2.09-3.87 3.137-5.805 1.907-1.829 1.06-1.92 2.09-3.558.897-1.421 1.985-2.38 1.354-4.556-1.266-4.38 1.48-10.587 1.662-15.168-.486-.52-2.14-.356-2.347-1.754-.421-2.844 1.063-7.879 1.977-8.358.406-.212.87-.023 1.231-.25-.001-2.134-2.09-14.005-.503-14.605.98-.372 3.23-.566 3.663-.765-.026-.506-.368-1.586-.782-1.644-.698-.1-2.128-.374-3.267-.64-3.496-.818-.261-14.809-.218-14.866.962-1.288 5.424.45 5.967-1.748 1.491-1.932-1.152-9.366 3.941-18.517 1.72-3.09 5.013-6.213 8.854-4.889 1.287.444.506 2.32 2.768.312.056-1.171-.479-2.152-.8-3.121C31.39 2.31 44.134-3.858 53.052 2.647c1.005.412 1.587.615 2.338 1.185.493 2.578 3.01 7.164.493 10.174-1.03.224-2.293.809-3.076 1.374-.014 1.04.12 2 .307 2.622.17.558.49.78-.339 1.122-.103.043-.06.392-.002.524 2.08.415 4.301-.391 5.693-.96h1.663v-2.125h.794v-1.665h.793v2.877h2.073v.913h30.749v1.62h1.36V14.38h1.143v4.82h2.618v2.753h8.14v-.82h1.356v.361H113v2.295h-3.845v.36h-1.356v-.819h-8.14v.82h-3.585v-.556h-1.536v1.667H80.954zM65 31h5c-.554.685-2.113 2.996-3.118 3-.406-.46-1.738-1.957-1.882-3zm5.281-2H66v-.673c1.173.022 1.918-.205 1.396-1.13-.791-1.392 2.638-1.318 3.144-1.018.895.534.306 2.076-.259 2.821z\"\n      fill-rule=\"evenodd\"\n    ></path>\n  </svg>\n)\n\nexport default App\n","import { useState } from 'react'\nimport data from 'items.json'\nexport function useItems() {\n  const [items] = useState(\n    data.map((item) => ({\n      lock: item.lock,\n      classid: item.classid,\n      price: item.salePrice,\n      suggestedPrice: item.suggestedPrice,\n      title: item.title,\n      wear: item.wear,\n      text: item.text,\n      name: item.name,\n      color: item.color,\n      inspect: item.inspectLink,\n      itemid: item.itemId,\n      pattern: item.assetId,\n    }))\n  )\n\n  return { items }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'tailwindcss/dist/base.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}